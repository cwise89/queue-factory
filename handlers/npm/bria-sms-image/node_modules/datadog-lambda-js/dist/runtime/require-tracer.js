"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getTraceTree = exports.subscribeToDC = exports.RequireNode = void 0;
var dc = require('diagnostics_channel');
var RequireNode = /** @class */ (function () {
    function RequireNode(id, filename, startTime) {
        this.id = id;
        this.filename = filename;
        this.startTime = startTime;
        this.endTime = startTime;
        this.children = [];
    }
    Object.defineProperty(RequireNode.prototype, "setEnd", {
        set: function (endTime) {
            this.endTime = endTime;
        },
        enumerable: false,
        configurable: true
    });
    return RequireNode;
}());
exports.RequireNode = RequireNode;
var moduleLoadStartChannel = dc.channel('dd-trace:moduleLoadStart');
var moduleLoadEndChannel = dc.channel('dd-trace:moduleLoadEnd');
var rootNodes = [];
var requireStack = [];
var pushNode = function (data) {
    var startTime = Date.now();
    var reqNode = new RequireNode(data.request, data.filename, startTime);
    var maybeParent = requireStack[requireStack.length - 1];
    if (maybeParent) {
        maybeParent.children.push(reqNode);
    }
    requireStack.push(reqNode);
};
var popNode = function () {
    var endTime = Date.now();
    var reqNode = requireStack.pop();
    if (reqNode) {
        reqNode.endTime = endTime;
    }
    if (requireStack.length <= 0 && reqNode) {
        rootNodes.push(reqNode);
    }
};
var subscribeToDC = function () {
    moduleLoadStartChannel.subscribe(pushNode);
    moduleLoadEndChannel.subscribe(popNode);
};
exports.subscribeToDC = subscribeToDC;
var getTraceTree = function () {
    return rootNodes;
};
exports.getTraceTree = getTraceTree;
//# sourceMappingURL=require-tracer.js.map